# -*- mode:org -*-
#+TITLE: Word-sense annotation in Emacs

This project intends to finish the word-sense annotations of the
[[http://wordnetcode.princeton.edu/glosstag.shtml][WordNet gloss corpus]], but can be used to sense-tag any corpus in the
S-expression-based format we have defined.


* Usage
You should set the directory where the files to be annotated are with
=M-x customize-variable RET sensetion-annotation-dir=. (You can
customize other stuff with =M-x customize-group RET sensetion=.)

Use =M-x sensetion= to start annotating. If this is the first time you
call it, it might take some time to index the files (you can do other
stuff on Emacs while it works); else it'll read the index files (which
lie by default in your home directory, prefixed by =.sensetion-=), and
start the annotation process.

=M-x sensetion-annotate= will ask you for a lemma and a PoS tag. You
can press =TAB= for completion of the lemma. This will build a buffer
with instances of this lemma+pos that have not been annotated
yet. Unannotated words will show as red/pink, while
previously-annotated tokens will show as green, and newly-annotated
tokens will show as blue (all these colors can be customized by the
user). For annotated tokens, dark colours indicate confidence in the
annotation. You can navigate through annotatable tokens with =<= and
=>=.

If you wish to sense-tag a token, press =/= on it. You may select one
or many senses -- or no sense at all -- by pressing the appropriate
keyboard key. Senses which are already selected are prefixed by a plus
sign (=+=); when satisfied, press enter/return. If you'd like to quit,
press =q=; note that quitting does not undo anything (if you selected
an option and then quit, its effects were already carried out and
saved). You can see how many tokens still need to be annotated in the
mode-line, next to the =sensetion= indicator.

If you wish to change a token's lemma use =l=. If you wish to say a
token is not annotatable (i.e., ignore it), use =i=. If you wish to
say you are unsure about an annotation, use =?=.

There is support for word collocations, such as phrasal verbs. The
tokens part of a collocation are united by a key, which is shown in
their bottom left corner.  You can unglob a collocation by pressing
=u= in any token of the collocation.  To glob tokens, you mark them
with =m= and finally press =g= to create the collocation. If you
marked a token by mistake, you can unmark tokens by pressing =m=
again.

You can move sentences up or down with =C-↑= and =C-↓=. Clustering
tokens with the same sense together might be useful.


** Indexing
If the index goes out of sync, you can force a new indexation with
=M-x sensetion-make-index=.


** Saving your work
- Any annotations are saved to their files at the moment they are
  done.
- The updated index is saved by default to your home directory in
  =.sensetion-index= when you quit emacs gracefully (that's why it
  hangs a little). This path is customizable.


** Seeing your work
We recommend setting up a git repository for the annotation files (see
any git tutorial if you are unfamiliar with it). Use
: git diff --color-words=.
(note the period =.=) to see the changes you made after the previous
commit.


* Report bugs
- Give clear instructions to reproduce the bug;
- Call =M-x toggle-debug-on-error=, reproduce the bug, and send the
  backtrace with your report.


* Installation
You need both elisp libraries and the =wn= executable.

** elisp
- make sure you have ELPA and [[https://melpa.org/#/getting-started][MELPA]] set up, so that you can download
  dependencies easily.
- to make things easier, install =use-package= with =M-x
  install-package RET use-package=.
- clone this repository.
- add the following snippet to your user configuration file (usually
  at =~/emacs.d/init.el=), substituting the paths to the appropriate
  ones:
  #+BEGIN_SRC elisp
    (use-package hydra :defer t :ensure t)
    (use-package flycheck :defer t :ensure t)
    (use-package s :defer t :ensure t)
    (use-package f :defer t :ensure t)
    (use-package trie :defer t :ensure t)
    (use-package async :defer t :ensure t)

    (use-package sensetion
      :commands sensetion
      :load-path "~/sensetion.el/"
      :bind (:map sensetion-mode-map
                  ;; here you can customize the standard command names; we
                  ;; don't like to use '/' to invoke sensetion-edit, so we
                  ;; bind it to 'e'
                  ("e" . sensetion-edit))
      :hook (sensetion-edit-mode
             ;;  here we can specify modes to be turned on for the raw
             ;;  sentence editing
             . lispy-mode)
      :custom (sensetion-annotation-dir "~/path/to/annotation/files"))
  #+END_SRC
  this will ensure the dependencies are installed and that the
  packages are properly loaded at the right time.
- restart emacs (or reload or your init file).


** wn
You may download the =wn= executable from your favorite package
manager. Be aware that package managers usually offer WordNet 3.1, and
not WordNet 3.0, which is the WordNet we use to annotate the WN gloss
corpus. If that is the case, download [[http://wordnetcode.princeton.edu/3.0/WNdb-3.0.tar.gz][WordNet 3.0 database files]], and
either:

- move them to the corresponding directory of package you installed;
- or set the =WNSEARCHDIR= variable to the directory of the WordNet
  3.0 database files.


* Annotation format

We convert the original XML files to property lists.

** conversion from original XML

The script that converts the original XML WN gloss corpus is at
=convert.lisp=. The MISC field of the annotation files saves lots of
information from the XML to preserve a mapping between them.

To re-run the conversion:

- download the [[http://wordnetcode.princeton.edu/glosstag.shtml][WordNet gloss corpus]];
- download the [[http://wordnetcode.princeton.edu/3.0/WNdb-3.0.tar.gz][WordNet 3.0 database files]];
- download and setup [[http://www.sbcl.org/][sbcl]] (although any common lisp implementation
  should work);
- setup [[https://www.quicklisp.org/beta/][quicklisp]];
- run:
  : ./convert.sh ~/WordNet-3.0/glosstag/merged/ ~/WordNet-3.0/dict/index.sense glosstag/
  where the first parameter is a directory is from the gloss corpus
  archive, the last parameter is the directory is where you want to
  put the files, and the second parameter is the index.sense file from
  the WordNet database. (Use absolute paths if you have problems with
  the command.) Note that the trailing slash in =glosstag/= is
  important.


* Status

Under heavy development -- user interface is unstable, and the code is
still to be generalized so that it can be made useful for annotation
of other corpora (maybe even of other stuff).

#+BEGIN_COMMENT
- [] use nosense
- [] prevent user from assigning man without senses
- index everyone?
  - [ ] no, only index parts of collocations
- [x] add ignore command
- [x] add unsure command
- [x] add unsure as a field
- [x] add confidence to plist
- [x] transform purposefully_ignored to man/auto with low confidence
- [x] confidence may be colored
- [x] purposefully ignored -> tag-nosense
#+END_COMMENT


